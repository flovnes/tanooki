# frozen_string_literal: true

module Youtube
  class TelegramJob < ApplicationJob
    queue_as :default

    def perform
      @api_call_executed ||= false
      @@mutex ||= Mutex.new

      @@mutex.synchronize do
        unless @api_call_executed
          return unless Rails.env.production?

          send_telegram_message
          @api_call_executed = true
        end
      end
    end

    private

    def index_path
      Rails.application.routes.url_helpers.youtube_videos_url(host: ApplicationHelper::PRODUCTION_URL)
    end

    def medal_icon(index)
      case index
      when 0
        'ü•á'
      when 1
        'ü•à'
      when 2
        'ü•â'
      end
    end

    def send_telegram_message
      TelegramBot.client.api.send_message(
        chat_id: '@bakaInUa',
        text: text_message,
        parse_mode: 'HTML'
      )
    end

    def text_message
      ActionController::Base.helpers.sanitize(
        "üåü <i>–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –≤—ñ–¥–µ–æ —Ç–∏–∂–Ω—è –Ω–∞ <b><a href=\"#{index_path}\">–ë–∞—Ü—ñ</a></b></i> üåü \n\n" \
        "#{top_three.each_with_index.map do |video, index|
             "#{medal_icon(index)} <b><a href=\"#{video_path(video)}\">#{video.title}</a></b> #{medal_icon(index)}"
           end.join("\n\n")} \n\n" \
        "üé¨ <i>–ù–∞—Å–æ–ª–æ–¥–∂—É–π—Ç–µ—Å—è —Å–≤—ñ—Ç–æ–º —è–ø–æ–Ω—Å—å–∫–æ—ó –∞–Ω—ñ–º–∞—Ü—ñ—ó –Ω–∞ –Ω–∞—à–æ–º—É —Å–∞–π—Ç—ñ!</i> üé¨ \n\n " \
        '<i><b>#—â–æ—Ç–∏–∂–Ω–µ–≤–∏–π_—é—Ç—É–±</b></i>'
      )
    end

    def top_three
      YoutubeVideo.last_week.order(views: :desc).limit(3)
    end

    def video_path(video)
      Rails.application.routes.url_helpers.youtube_video_url(video, host: ApplicationHelper::PRODUCTION_URL)
    end
  end
end
